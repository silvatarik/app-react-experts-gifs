{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"gOAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,mCACG,sBAAMC,SARQ,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,gBACZR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAAyBO,QAKpC,SACK,uBAAOC,KAAK,OAAOC,MAAOT,EAAYU,SAdxB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,e,+BCRlBG,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACP,mCAGPC,EAJc,iDAImCC,UAAUH,GAJ7C,6BACP,oCADO,SAKDI,MAAMF,GALL,cAKdG,EALc,gBAMCA,EAAKC,OANN,uBAMbC,EANa,EAMbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAZrB,kBAiBbM,GAjBa,4CAAH,sDCCRO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEnC,OACI,qBAAKc,UAAW,+CAAhB,SACI,mCACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,qCAAaA,UCHhBO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAQrB,ECRwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAbAC,qBAAU,WACNxB,EAASC,GAAUwB,MAAK,SAAAC,GACpBC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAET,CAACpB,IAIIqB,EDbuBM,CAAa3B,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAGnB,OACI,qCACI,6BAAKpB,IACJoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEO/BiB,EAzBM,SAAAC,GAEjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAMA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAGQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,Y,MChB9D+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c23413ec.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Submit hecho');\r\n        setCategories((cats) => [inputValue,...cats]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" value={inputValue} onChange={handleInputChange}/>\r\n           </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired,\r\n}\r\n","//Regresa una promesa a traves del resolve con la coleccion de imagenes\r\nexport const getGifts = async(category) =>{\r\n    const token ='TW1PjTxKqMxpqaEpMniiiK8GyoNS7P3e';\r\n\r\n    //encodeURI permite reemplazar los espacios por %20\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${token}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url \r\n        }\r\n    });\r\n\r\n    // console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n    \r\n    return (\r\n        <div className={'card animate__animated animate__bounceInLeft'}>\r\n            <figure>\r\n                <img src={url} alt={title}/>\r\n                <figcaption>{title}</figcaption>\r\n            </figure>\r\n           \r\n           \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState,useEffect } from 'react'\r\nimport { getGifts } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect(()=>{\r\n    //     getGifts(category).then(imgs => setImages(imgs));\r\n    // },[category])\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading</p>}\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map(img =>\r\n                        <GifGridItem key={img.id} {...img}/>\r\n                        )\r\n                    }\r\n            </div>\r\n\r\n            {/* {loading ? 'Cargando data' : 'Data cargada'} */}\r\n        </>\r\n    )\r\n}\r\n","// los hooks no son mas que funciones\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getGifts } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    //lo efectos no pueden ser assync\r\n    useEffect(()=>{\r\n        getGifts(category).then(imgs =>{\r\n            setTimeout(() => {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }, 3000);\r\n        });\r\n    },[category]);\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport './GifExpertApp.css';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nconst GifExpertApp = props => {\r\n\r\n    const [categories, setCategories] = useState(['One punch'])\r\n\r\n    const handleAdd = () => {\r\n        setCategories([...categories,'Vinland']);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n                {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {   \r\n                    // categories.map(category => <li key={category}>{category}</li>)\r\n                    categories.map(category => <GifGrid  key={category} category={category}/>)\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}